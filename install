#!/usr/bin/env bash

set -eu
################################################################################
# Update submodules.
################################################################################
echo -e "Update submodules"
git submodule update --init

################################################################################
# Install brew (for macos)
################################################################################
if ! command -v brew && [[ $(uname) == "Darwin" ]]; then
  echo "Installing brew..."
  /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi

################################################################################
# Install vim Plug
################################################################################
echo -e "\\nInstalling vim Plug ..."
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

# Install vim plugins and quit
nvim +PlugInstall +qa

################################################################################
# home-manager
################################################################################
# Install nix; home-manager
if ! command -v nix; then
  echo "Installing nix..."
  curl -L https://nixos.org/nix/install | sh
fi

# Use unstable channel
nix-channel --add https://nixos.org/channels/nixpkgs-unstable
nix-channel --add https://github.com/rycee/home-manager/archive/master.tar.gz home-manager
nix-channel --update

if ! command -v home-manager; then
  echo "Installing home-manager..."
  nix-shell '<home-manager>' -A install
fi

########################################
# Install nnn plugins
########################################
curl -Ls https://raw.githubusercontent.com/jarun/nnn/master/plugins/getplugs | sh

########################################
# Install tpm
########################################
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm

################################################################################
# Use stow to populate dotfiles
################################################################################
echo -e "Populating dotfiles...\\n"
for i in */; do
  echo "Stowing $i ..."
  stow -R "$i"
done

################################################################################
# DONE
################################################################################
echo -e "\\nDone!"
